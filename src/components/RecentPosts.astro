---
// src/components/RecentPosts.astro
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';

// Ambil data postingan mentah
const rawPosts = await getCollection('blog');

// --- PERUBAHAN UTAMA: KONVERSI TANGGAL MANUAL ---
// Kita tidak lagi percaya pada 'transform'. Kita lakukan di sini secara paksa.
// Ini akan memastikan 'pubDate' adalah objek Date.
const allPosts = rawPosts.map(post => ({
  ...post,
  data: {
    ...post.data,
    pubDate: new Date(post.data.pubDate),
  }
}));

// Sekarang, sisa kode di bawah ini bisa berjalan seperti seharusnya
const sortedPosts = allPosts.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());

const recentPosts = sortedPosts.slice(0, 4);
---
<section class="container mx-auto px-4 py-16 md:py-24">
  <div class="flex justify-between items-center mb-12">
    <h2 class="text-3xl font-bold text-white">Tulisan Terbaru</h2>
    <a href="/blog" class="border border-gray-700 hover:bg-gray-800 text-gray-300 font-semibold py-2 px-5 rounded-lg transition-colors text-sm hidden sm:block">
      Semua Postingan &rarr;
    </a>
  </div>
  
  <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
    {recentPosts.map((post) => (
      <div class="flex flex-row md:flex-col border border-gray-800 rounded-lg overflow-hidden bg-gray-900/50 group transition-all hover:border-cyan-400/50">
        
        {post.data.heroImage && (
          <a href={`/blog/${post.slug}/`} class="block w-1/3 md:w-full flex-shrink-0">
            <Image 
              src={post.data.heroImage} 
              alt={`Gambar untuk ${post.data.title}`} 
              width={400} 
              height={225}
              format="webp"
              class="w-full h-full md:h-48 object-cover transition-transform duration-300 group-hover:scale-105"
            />
          </a>
        )}
        
        <div class="p-4 md:p-6 flex flex-col flex-grow">
          <p class="text-gray-400 text-xs md:text-sm mb-2">
            {post.data.pubDate.toLocaleDateString('id-ID', {
              year: 'numeric', month: 'long', day: 'numeric'
            })}
          </p>
          
          <h3 class="text-lg md:text-xl font-bold mb-2">
            <a href={`/blog/${post.slug}/`} class="hover:text-cyan-400 transition-colors">{post.data.title}</a>
          </h3>

          <p class="text-gray-300 mb-4 flex-grow text-sm">{post.data.description}</p>
          
          <div class="flex flex-wrap items-center gap-2 mt-auto pt-4 border-t border-gray-800">
            {post.data.category && (
              <span class="bg-cyan-400/10 text-cyan-400 text-xs font-bold px-2 py-1 rounded-full">
                {post.data.category}
              </span>
            )}
            {post.data.tags?.map((tag: string) => (
              <span class="bg-gray-700/50 text-gray-300 text-xs font-semibold px-2 py-1 rounded-full hidden sm:inline-block">
                #{tag}
              </span>
            ))}
          </div>
        </div>
      </div>
    ))}
  </div>
</section>