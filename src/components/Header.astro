---
// src/components/Header.astro
import { SITE, LINKS } from "../consts";
import Container from "./Container.astro";
import HeaderLink from "./HeaderLink.astro";
import { con } from "../lib/utils"

const { pathname } = Astro.url
const subpath = pathname.match(/[^/]+/g)
---
<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const header = document.querySelector('header[aria-label="Base Header"]');
    const scrollThreshold = 10;
    let isScrolled = false;
    const handleScroll = () => {
      const scrolledCurrently = window.scrollY > scrollThreshold;
      if (scrolledCurrently !== isScrolled) {
        isScrolled = scrolledCurrently;
        if (header) {
          header.classList.toggle("is-scrolled", isScrolled);
        }
      }
    };

    window.addEventListener("scroll", handleScroll);
    handleScroll();
  });
</script>

<header id="header" aria-label="Base Header" class="fixed top-0 z-50 w-full oveflow-hidden bg-transparent border-b border-transparent backdrop-blur-md [&.is-scrolled]:bg-[var(--color-bg)] [&.is-scrolled]:border-[var(--color-border)]">
  <Container size="md">
    <div class="flex items-center justify-between py-4 h-16">
      <div class="flex-1 justify-center h-full items-center">
        <a href="/" aria-label={`Beranda ${SITE.title}`} class={con("flex md:block", "size-9 rounded-full p-2 items-center justify-center", "bg-transparent hover:bg-[var(--color-hover)]", "stroke-[var(--color-fg)] hover:stroke-[var(--color-bg)]", "border border-[var(--color-border)]", "transition-colors duration-500 ease-in-out")}>
          <svg id="sie-log" stroke="var(--color-fg)" class="size-full pointer-events-none">
            <use href="/ui.svg#logo"></use>
          </svg>
        </a>
        <span class="hidden font-semibold text-center">{SITE.title}</span>
      </div>
      <nav class="hidden md:flex items-center justify-center text-sm gap-1">
         {LINKS.map((link) => (
          <HeaderLink
            href={link.HREF}
            class={con("h-8 rounded-full px-3 text-[var(--color-fg)]", "flex items-center justify-center", "transition-colors duration-300 ease-in-out", pathname === link.HREF || "/" + subpath?.[0] === link.HREF ? "bg-[var(--color-bg-secondary)] text-[var(--color-fg)" : "hover:bg-[var(--color-hover)] hover:text-[var(--color-fg)]")}
            aria-label={`Menu ${link.TEXT}`}>
            {link.TEXT}
          </HeaderLink>
        ))}
      </nav>
      <button id="header-drawer-button" aria-label={`Toggle drawer open and closed`} class={con("flex md:hidden", "size-9 rounded-full p-2 items-center justify-center", "bg-transparent hover:bg-[var(--color-hover)]", "stroke-[var(--color-fg)] hover:stroke-[var(--color-fg)", "border border-[var(--color-border)]", "transition-colors duration-500 ease-in-out cursor-pointer")}>
        <svg id="drawer-open" stroke="var(--color-fg)" class="size-full pointer-events-none">
          <use href="/ui.svg#menu"></use>
        </svg>
        <svg id="drawer-close" stroke="var(--color-fg)" class="size-full pointer-events-none">
          <use href="/ui.svg#close"></use>
        </svg>
      </button>
    </div>
  </Container>
</header>
<style>
  #drawer-open {
  display: block;
  }
  #drawer-close {
    display: none;
  }
  #header-drawer-button.open #drawer-open {
    display: none;
  }
  #header-drawer-button.open #drawer-close {
    display: block;
  }
</style>