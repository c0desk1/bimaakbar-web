---
import { SEO } from 'astro-seo';
import { SITE } from '../consts';
import { ClientRouter } from "astro:transitions";

const GTM_ID = import.meta.env.GTM_ID;

const {
  title = '',
  description = SITE.description,
  image = '/open-graph.png',
} = Astro.props;

const fullTitle = Astro.url.pathname === '/' ? SITE.title : `${title} | ${SITE.author}`;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const gtmScript = `(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;
j.src='https://www.googletagmanager.com/gtm.js?id=' + i + dl;
f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','${GTM_ID}');`;
---

<SEO
  title={fullTitle}
  description={description}
  canonical={canonicalURL.toString()}
  twitter={{
    card: 'summary_large_image',
    site: '@bimaakbarmusic'
  }}
  openGraph={{
    basic: {
      title,
      type: 'website',
      image: new URL(image, Astro.site).toString(),
      url: canonicalURL.toString()
    },
    optional: {
      siteName: SITE.title,
      description
    }
  }}
/>

<!-- Fonts & Icons -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin="anonymous" />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin="anonymous" />

<link rel="icon" href="/favicon.svg" type="image/svg+xml" />
<link rel="apple-touch-icon" href="/apple-touch-icon.png" />
<link rel="manifest" href="/site.webmanifest" />
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Meta -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta name="generator" content={Astro.generator} />
<meta name="apple-mobile-web-app-title" content={title} />
<meta name="color-scheme" content="light dark" />
<meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)" />
<meta name="theme-color" content="#0d0d0d" media="(prefers-color-scheme: dark)" />

<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={image} />

<!-- Scripts -->
<script is:inline async defer set:html={gtmScript}></script>
<script is:inline async defer src="https://accounts.google.com/gsi/client"></script>

<!-- THEME SCRIPT ala next-themes -->
<script is:inline>
  const storageKey = "theme";
  const userPref = localStorage.getItem(storageKey);

  // Default ikut system
  if (userPref === "light" || userPref === "dark") {
    document.documentElement.classList.add(userPref);
  }
  // Jika tidak ada, biarkan prefers-color-scheme (CSS) yang jalan

  // Buat toggle button sinkron
  document.addEventListener("DOMContentLoaded", () => {
    const buttons = document.querySelectorAll(".theme-btn");

    function setActive(theme) {
      buttons.forEach((btn) => {
        btn.classList.toggle("active", btn.dataset.theme === theme);
      });
    }

    // aktifkan sesuai class di html
    const currentTheme = document.documentElement.classList.contains("dark")
      ? "dark"
      : document.documentElement.classList.contains("light")
        ? "light"
        : window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
    setActive(currentTheme);

    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const selected = btn.dataset.theme;
        // reset
        document.documentElement.classList.remove("dark", "light");
        // jika pilih 'system', hapus class & biarkan preferensi OS
        if (selected === "system") {
          localStorage.removeItem(storageKey);
        } else {
          document.documentElement.classList.add(selected);
          localStorage.setItem(storageKey, selected);
        }
        setActive(selected);
      });
    });
  });
</script>